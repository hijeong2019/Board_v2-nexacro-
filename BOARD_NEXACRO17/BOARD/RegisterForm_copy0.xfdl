<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="registerForm" width="800" height="600" titletext="Login" onload="form_onload">
    <Layouts>
      <Layout height="600" width="800">
        <Static id="sta00" taborder="0" text="회원가입" left="37%" top="3.5%" width="210" height="54" textAlign="center" font="bold 36px/19px &quot;Malgun Gothic&quot;" color="#5b92e4"/>
        <Edit id="edt_Id" taborder="7" left="32.25%" top="19.50%" height="27" displaynulltext="ID 입력" width="20.63%"/>
        <Static id="sta00_00" taborder="1" text="아이디" left="32.25%" top="15%" width="68" font="bold 16px/19px &quot;Malgun Gothic&quot;" bottom="edt_Id:5"/>
        <Static id="stc_Possible" taborder="17" text="사용 가능한 아이디입니다." left="32.25%" top="24.00%" width="146" height="30" color="blue" visible="false"/>
        <Static id="stc_Impossible" taborder="16" text="중복된 아이디 입니다." left="32.25%" top="24.17%" width="146" height="30" color="red" visible="false"/>
        <Static id="sta00_00_00" taborder="2" text="비밀번호" left="32.25%" top="stc_Impossible:6.67%" width="68" height="22" font="bold 16px/19px &quot;Malgun Gothic&quot;"/>
        <Edit id="edt_Pwd" taborder="8" left="32.25%" top="sta00_00_00:27.27%" height="27" displaynulltext="PW 입력" password="true" width="20.63%"/>
        <Static id="sta00_00_01" taborder="4" text="이름" left="32.25%" top="edt_Pwd:66.67%" width="68" height="22" font="bold 16px/19px &quot;Malgun Gothic&quot;"/>
        <Edit id="edt_Name" taborder="9" left="32.25%" top="sta00_00_01:22.73%" width="20.63%" height="27" displaynulltext="홍길동"/>
        <Static id="sta00_00_00_00" taborder="3" text="이메일" left="32.25%" top="edt_Name:55.56%" width="68" height="22" font="bold 16px/19px &quot;Malgun Gothic&quot;"/>
        <Edit id="edt_Email" taborder="10" left="32.25%" top="sta00_00_00_00:22.73%" width="20.63%" height="27" displaynulltext="id@domain.com"/>
        <Static id="sta00_00_01_00" taborder="6" text="성별" left="32.25%" top="edt_Email:66.67%" width="68" height="22" font="bold 16px/19px &quot;Malgun Gothic&quot;"/>
        <Radio id="rdo_Gender" taborder="15" left="32.25%" top="sta00_00_01_00:22.73%" width="143" height="29" innerdataset="innerdataset" codecolumn="codecolumn" datacolumn="datacolumn" direction="vertical" rowcount="1" index="-1" text="" value="">
          <Dataset id="innerdataset">
            <ColumnInfo>
              <Column id="codecolumn" size="256"/>
              <Column id="datacolumn" size="256"/>
            </ColumnInfo>
            <Rows>
              <Row>
                <Col id="codecolumn">M</Col>
                <Col id="datacolumn">Male</Col>
              </Row>
              <Row>
                <Col id="codecolumn">W</Col>
                <Col id="datacolumn">Female</Col>
              </Row>
            </Rows>
          </Dataset>
        </Radio>
        <Static id="sta00_00_00_00_00" taborder="5" text="주소" left="32.25%" top="rdo_Gender:34.48%" width="68" height="22" font="bold 16px/19px &quot;Malgun Gothic&quot;"/>
        <Edit id="edt_Address" taborder="11" left="32.25%" top="sta00_00_00_00_00:13.64%" width="20.63%" height="27" displaynulltext="Korea" onkeydown="edt_Address_onkeydown"/>
        <Button id="btn_Register" taborder="12" text="확인" left="32.25%" top="edt_Address:74.07%" width="20.63%" height="34" onclick="comm_Click" background="#5B92E4" cursor="pointer" boxShadow="1px 1px 2px 0px #7c7c7c" color="white" font="14px/normal &quot;Malgun Gothic&quot;"/>
        <Button id="btn_Idchk" taborder="14" text="중복확인" left="54.25%" width="79" height="29" onclick="comm_Click" background="#5B92E4" cursor="pointer" boxShadow="1px 1px 2px 0px #7c7c7c" color="white" top="19.33%"/>
        <Button id="btn_Back" taborder="13" text="취소" height="34" onclick="comm_Click" cursor="pointer" boxShadow="1px 1px 2px 0px #7c7c7c" color="#5b92e4" background="white" border="1px inset #5b92e4" font="14px/normal &quot;Malgun Gothic&quot;" top="btn_Idchk:1317.24%" left="54.25%" width="50"/>
      </Layout>
    </Layouts>
    <Objects>
      <Dataset id="dsMemberinsert">
        <ColumnInfo>
          <Column id="userId" type="STRING" size="10"/>
          <Column id="userPw" type="STRING" size="10"/>
          <Column id="userName" type="STRING" size="10"/>
          <Column id="userEmail" type="STRING" size="20"/>
          <Column id="userGender" type="STRING" size="10"/>
          <Column id="userAddress" type="STRING" size="20"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsIdsearch">
        <ColumnInfo>
          <Column id="userId" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="dsIdok"/>
    </Objects>
    <Script type="xscript5.1"><![CDATA[/**
*  @MenuPath    BOARD > RegisterForm
*  @FileName 	RegisterForm.xfdl 
*  @Creator     박정연
*  @CreateDate 	2020.04.09
*  @Desction    게시판 화면 구현

************** 소스 수정 이력 ***********************************************
*  date          		Modifier                Description
*******************************************************************************
*  2020.04.09     	consulting 	        최초 생성 
*******************************************************************************
*/

/************************************************************************************************
 * FORM 변수 선언 영역
 ************************************************************************************************/
 
// 사용자 userEmpNo 
//this.fv_objApp 	  		= this.gfnGetApplication();
this.fv_flag			= 0;

/***********************************************************************************************
* FORM EVENT 영역(onload)
/***********************************************************************************************/
this.form_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	//this.fnFormInit(); 
};

/************************************************************************************************
* TRANSACTION 서비스 호출 처리
************************************************************************************************/
//회원가입
this.fnRegisterin = function()
{
	var strSvcId    = "insertMemberInfo";
	var strSvcUrl   = "/board/member/insertMember.do";
	var inData      = "dsMemberinsert=dsMemberinsert:A";
	var outData     = "";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(
							strSvcId , 		// transaction을 구분하기 위한 svc id값;
							strSvcUrl , 	// trabsaction을 요청할 주소;
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭; :A모든 정보 전송
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭;
							strArg , 		// 입력갑스로 보낼 arguments, strFormData="20120607";
							callBackFnc , 	// 콜백 함수명;
							"LIST"			// LIST/REG/MOD/RMV/PROC;
						);		
};

//아이디 중복체크
this.fnIdcheckin = function()
{
	var strSvcId    = "idCheckInfo";
	var strSvcUrl   = "/board/member/idCheck.do";
	var inData      = "dsIdsearch=dsIdsearch";
	var outData     = "dsIdok=dsIdok";
	var strArg      = "";
	var callBackFnc = "fnCallback";
	
	this.gfnTransaction(
							strSvcId , 		// transaction을 구분하기 위한 svc id값;
							strSvcUrl , 	// trabsaction을 요청할 주소;
							inData , 		// 입력값으로 보낼 dataset id , a=b형태로 실제이름과 입력이름을 매칭; :A모든 정보 전송
							outData , 		// 처리결과값으로 받을 dataset id, a=b형태로 실제이름과 입력이름을 매칭;
							strArg , 		// 입력갑스로 보낼 arguments, strFormData="20120607";
							callBackFnc , 	// 콜백 함수명;
							"LIST"			// LIST/REG/MOD/RMV/PROC;
						);		
};

/************************************************************************************************
 * CALLBACK 콜백 처리부분
 ************************************************************************************************/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	if( errorCode != 0 )
	{
		trace(errorCode + ">>>" + errorMsg );
				
		//서버에서 다음과 같은 에러메시지를 받았습니다.\n{0}
		this.gfnAlert("msg.server.error.msg",[errorMsg]);
		return;
	}
	
	switch(svcID)
	{
		case "insertMemberInfo":
			//trace(this.dsMemberinsert.saveXML());
			
			if(this.dsMemberinsert.rowcount > 0)
			{
				//VFrameSet 사이즈 조정
				//this.fv_objApp.mainframe.VFrameSet.set_separatesize("*,0,0");      //로그인화면 보여줌
				this.parent.parent.parent.form.fnSetUrl("BOARD::LoginForm.xfdl");
				this.alert("회원가입되었습니다.");
			}
			else
				this.alert("회원가입에 실패했습니다.");
		break;
		
		//아이디 중복체크
		case "idCheckInfo" :
		
			if(this.dsIdok.getColumn(0, "cnt") > 0)
			{
				//사용 불가능 ID
				this.fv_flag = 0;
				this.stc_Impossible.set_visible(true);
				this.stc_Possible.set_visible(false);
			}
			else
			{
				//사용 가능 ID
				this.fv_flag = 1;
				this.stc_Possible.set_visible(true);
				this.stc_Impossible.set_visible(false);
			}
		break;
	}
};

 /************************************************************************************************
 * 사용자 FUNCTION 영역
 ************************************************************************************************/
this.fnFormInit = function()
{
// 	this.gfnFormOnLoad(this); //초기화[필수]
// 	this.fnSearch();
}; 

/**
 * @description 회원가입
*/
this.fnRegister = function()
{
	//검색조건 초기화.
	if(this.fnSearchParamSet())
	{
		//회원가입 TRANSACTION
		this.fnRegisterin();
	}
};

/**
 * @description 아이디 중복체크
*/
this.fnIdcheck = function()
{
	if(this.fnSearchId())
	{
		//아이디 중복체크 TRANSACTION
		this.fnIdcheckin();
	}
}

/**
 * @description dsMemberinsert dataset 초기화
*/
this.fnSearchParamSet = function()
{
	//DS 초기화
	this.dsMemberinsert.clearData();
	//DS row 추가
	var nRow = this.dsMemberinsert.addRow();
	
// 	var fromDate = this.gfnGetDate("dash");
// 	var toDate = this.gfnGetDate("dash");
	
	//회원가입
	if(!this.gfnIsNull(this.edt_Id.value))
	{
		this.dsMemberinsert.setColumn(nRow,"userId", this.edt_Id.value);
		this.dsMemberinsert.setColumn(nRow,"userPw", this.edt_Pwd.value);
		this.dsMemberinsert.setColumn(nRow,"userName", this.edt_Name.value);
		this.dsMemberinsert.setColumn(nRow,"userEmail", this.edt_Email.value);
		this.dsMemberinsert.setColumn(nRow,"userGender", this.rdo_Gender.value);
		this.dsMemberinsert.setColumn(nRow,"userAddress", this.edt_Address.value);
	}
	else
	{	
		this.dsMemberinsert.setColumn(nRow,"userId", "");
		this.dsMemberinsert.setColumn(nRow,"userPw", "");
		this.dsMemberinsert.setColumn(nRow,"userName", "");
		this.dsMemberinsert.setColumn(nRow,"userEmail", "");
		this.dsMemberinsert.setColumn(nRow,"userGender", "");
		this.dsMemberinsert.setColumn(nRow,"userAddress", "");
	}
	return true;

};

/**
 * @description dsIdsearch dataset 초기화
*/
this.fnSearchId = function()
{		
	//DS 초기화
	this.dsIdsearch.clearData();
	//DS row 추가
	var nRow = this.dsIdsearch.addRow();
	
	if(!this.gfnIsNull(this.edt_Id.value))
		this.dsIdsearch.setColumn(nRow,"userId", this.edt_Id.value);
	else
		this.dsIdsearch.setColumn(nRow,"userId", "");
	return true;
}

/**
 * @description 공백 예외처리
*/
this.fnValidation = function()
{
	if(this.gfnIsNull(this.edt_Id.value) || this.gfnIsNull(this.edt_Pwd.value) || this.gfnIsNull(this.edt_Name.value) || this.gfnIsNull(this.edt_Email.value) || this.gfnIsNull(this.rdo_Gender.value) || this.gfnIsNull(this.edt_Address.value))
	{
		this.alert("입력란을 모두 입력해주세요.");
		return false;	
	}
	else 
		return true;
};

/**
 * @description 아이디 중복확인 전 공백확인
*/
this.fnIdValidation = function()
{
	if(this.gfnIsNull(this.edt_Id.value))
	{
		this.alert("아이디를 입력해주세요.");
		return false;	
	}
	else 
		return true;
};
 /************************************************************************************************
 * 각 COMPONENT 별 EVENT 영역
 ************************************************************************************************/
this.comm_Click = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	switch(obj.name)
	{
		case "btn_Register" : 
			if(this.fnValidation())
			{
				if(this.fv_flag == 0)
				{
					this.alert("아이디 중복확인이 필요합니다.");
					return;
				}
				else
					this.fnRegister();
			}
		break;
		
		case "btn_Back" : 
			//VFrameSet 사이즈 조정
			//this.fv_objApp.mainframe.VFrameSet.set_separatesize("*,0,0");
			this.parent.parent.parent.form.fnSetUrl("BOARD::LoginForm.xfdl");
		break;
		
		case "btn_Idchk" :
			if(this.fnIdValidation())
			{
				this.fnIdcheck();
			}
		break;
	}
};

this.edt_Address_onkeydown = function(obj:nexacro.Edit,e:nexacro.KeyEventInfo)
{
	if(e.keycode == 13)
	{
		this.btn_Register.click();
	}
};
]]></Script>
  </Form>
</FDL>
